package main;

/*********************************
Компьютерный практикум №3
ФІ-43, А. Малышко, В. Лещенко
*******************************/

import java.util.ArrayList;

public class L2Breaker {
	static int llen = 26;
	//static String sz
	static String sz = RandSeqGen.sz;
	static boolean[] z;
	static int[]
	lpoly = {0, 20, 24, 25, 26};
	static int N = /*230*/RandSeqGen.dN2;
	static double C = /*75*/RandSeqGen.dC2;
	
	static ArrayList<boolean[]> filter() {
		System.out.println("Breaking L2");
		ArrayList<boolean[]> res = new ArrayList<>();
		long start_timer = System.currentTimeMillis();
		boolean[] y;
		z = stringToBoolArr(sz);
		int n = llen;
		boolean[] x = new boolean[n];
		int R = 0;
		LR l = new LR(new boolean[llen], lpoly);
		for(int i=1; i<Math.pow(2, n); i++) {
			for(int j=n-1; j>=0; j--) { //от конца к началу, если 0 то меняем на 1 и заканчиваем, если 1 - меняем на 0 и продолжаем
				if(x[j]==false) {
					//change = j;
					x[j] = true;
					break;
				}
				x[j] = false;
			}
			l.init = x.clone();
			y = l.generSeq(N);
			for(int j=0; j<y.length; j++) {
				if(y[j]^z[j]) R++;
			}
			if(R<C) {
				System.out.println("possible answer found:\t" + R + " < " + C + "\t" + RandSeqGen.lpad(Integer.toBinaryString(i), llen) + "\ton iter " + i);
				res.add(x.clone());
			}
			R = 0;
			if(i%(int)(Math.pow(2, n)/10) == 0) System.out.println((System.currentTimeMillis() - start_timer)/1000 + " s");
		}
		return res;
	}
	
	public static boolean[] stringToBoolArr(String s) throws IllegalArgumentException {
		boolean[] b = new boolean[s.length()];
		for(int i=0; i<b.length; i++) {
			if(s.charAt(i) == '0') b[i] = false;
			else if(s.charAt(i) == '1') b[i] = true;
			else throw new IllegalArgumentException("String should contain '0' or '1'. Found '" + s.charAt(i)+ "'.");
		}
		return b;
	}
}
