package ua.com.testcms.actions;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import java.io.IOException;
import java.util.*;


/**
 * Servlet implementation class Signup
 */
@WebServlet("/Signup")
public class SignupServlet extends HttpServlet {
	private static final long serialVersionUID = 1L; //autogenerated by eclipse
	private static final String driverName = "org.postgresql.Driver"; //драйвер postgres базы данных имен-паролей
	private static final String[] databaseCredentials = {"users", "postgres", "password"}; //название базы данных, логин и пароль для доступа к ней
	private Connection con;
	private static String errors = "";
       
    /**
     * @see HttpServlet#HttpServlet()
     */
    public SignupServlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    
    public void destroy() {
    	closeConnection(con);
    }

	/**
	 * @see HttpServlet#doGet(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doExecute(request, response);
	}

	/**
	 * @see HttpServlet#doPost(HttpServletRequest request, HttpServletResponse response)
	 */
	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doExecute(request, response);
	}
	
	public void doExecute(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		initDatabaseDriver();
		con = setUpConnection();
		response.getWriter().append("kappa " + testSQLStatement(con) + "\n" + errors);
		if(con != null) {
			try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
		}
	}
	
	 private static boolean initDatabaseDriver() {
		  try {
				Class.forName(driverName);
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				errors += "DB driver init failed";
				System.out.println("DB driver init failed");
				e.printStackTrace();
				return false;
			}
		  return true;
	  }
	  
	  private static Connection setUpConnection() {
		  String url = "jdbc:postgresql://localhost/" + databaseCredentials[0] + "?user=" + databaseCredentials[1] + "&password=" + databaseCredentials[2] + "&ssl=false";
		  Connection con = null;
		  try {
			con = DriverManager.getConnection(url);
		  } catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			errors+="trouble while setting up connection";
			System.out.println("trouble while setting up connection");
		  }
		  return con;
	  }
	  
	  private static void closeConnection(Connection con) {
		  try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	        con = null;
	  }
	  
	  
	  private static String testSQLStatement(Connection con) {
		  Statement st = null;
		  ResultSet rs = null;
		  String res = "";
		  try {
			  st = con.createStatement();
			  rs = st.executeQuery("select * from users");
			  while (rs.next()){
				  res+="<p>"+ rs.getString(1) + "</p>";
			  }
			  return res;
		  }
		  catch (SQLException e) {
			  errors+="test sql statement failed.";
			  System.out.println("test sql statement failed");
			  e.printStackTrace();
		  }
		  finally {
			  if (st != null) {
				try {
					st.close();
				} catch (SQLException e) {
					errors+="couldnt close connection.";
					e.printStackTrace();
				}
			  }
			  if (rs != null) {
				  try {
					  rs.close();
				  } catch (SQLException e) {
					  errors+="couldnt close Result Set.";
					  e.printStackTrace();
				  }
			  }
		  }
		  return "error";
	  }
	  
	  private static String justString() {
		  return "ordinary string";
	  }


}

/*package ua.com.testcms.actions;

import javax.servlet.http.HttpServlet;
import javax.servlet.http.HttpServletRequest;
import javax.servlet.http.HttpServletResponse;
import javax.servlet.http.HttpSession;
import javax.servlet.ServletException;
import javax.servlet.annotation.WebServlet;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.sql.Statement;
import java.util.Properties;

import java.io.IOException;
import java.util.*;

import ua.com.testcms.dao.*;




@WebServlet("/test")
public class SignupServlet extends HttpServlet {
	private static final long serialVersionUID = 1L; //autogenerated by eclipse
	private static final String driverName = "org.postgresql.Driver"; //драйвер postgres базы данных имен-паролей
	private static final String[] databaseCredentials = {"users", "postgres", "password"}; //название базы данных, логин и пароль для доступа к ней
	private Connection con;
       

    public SignupServlet() {
        super();
        // TODO Auto-generated constructor stub
    }
    
    public void init() {
    	initDatabaseDriver();
        con = setUpConnection();
        if (con != null) {
			System.out.println("You made it, take control your database now!");
		} else {
			System.out.println("Failed to make connection!");
		}
    }

    public void destroy() {
    	closeConnection(con);
    }

	protected void doGet(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		
		response.getWriter().append("Served at: ").append(request.getContextPath()).append(testSQLStatement(con));
	}


	protected void doPost(HttpServletRequest request, HttpServletResponse response) throws ServletException, IOException {
		// TODO Auto-generated method stub
		doGet(request, response);
	}
	
	  private static boolean initDatabaseDriver() {
		  try {
				Class.forName(driverName);
			} catch (ClassNotFoundException e) {
				// TODO Auto-generated catch block
				System.out.println("DB driver init failed");
				e.printStackTrace();
				return false;
			}
		  return true;
	  }
	  
	  private static Connection setUpConnection() {
		  String url = "jdbc:postgresql://localhost/" + databaseCredentials[0] + "?user=" + databaseCredentials[1] + "&password=" + databaseCredentials[2] + "&ssl=false";
		  Connection con = null;
		  try {
			con = DriverManager.getConnection(url);
		  } catch (SQLException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
			System.out.println("trouble while setting up connection");
		  }
		  return con;
	  }
	  
	  private static void closeConnection(Connection con) {
		  try {
				con.close();
			} catch (SQLException e) {
				// TODO Auto-generated catch block
				e.printStackTrace();
			}
	        con = null;
	  }
	  
	  
	  private static String testSQLStatement(Connection con) {
		  try {
			  String res = "";
			  Statement st = con.createStatement();
			  ResultSet rs = st.executeQuery("select * from users");
			  while (rs.next()){
				  res+="<p>"+ rs.getString(1) + "</p>";
			  }
			  return res;
		  }
		  catch (SQLException e) {
			  System.out.println("test sql statement failed");
			  e.printStackTrace();
		  }
		  return "error";
	  }

}*/
